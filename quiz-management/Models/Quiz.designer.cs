#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace quiz_management.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuizDB")]
	public partial class QuizDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertboDe(boDe instance);
    partial void UpdateboDe(boDe instance);
    partial void DeleteboDe(boDe instance);
    partial void InsertthongTin(thongTin instance);
    partial void UpdatethongTin(thongTin instance);
    partial void DeletethongTin(thongTin instance);
    partial void InsertcauHoi(cauHoi instance);
    partial void UpdatecauHoi(cauHoi instance);
    partial void DeletecauHoi(cauHoi instance);
    partial void InsertcTBoDe(cTBoDe instance);
    partial void UpdatecTBoDe(cTBoDe instance);
    partial void DeletecTBoDe(cTBoDe instance);
    partial void InsertcTDongGop(cTDongGop instance);
    partial void UpdatecTDongGop(cTDongGop instance);
    partial void DeletecTDongGop(cTDongGop instance);
    partial void InsertcTKetQua(cTKetQua instance);
    partial void UpdatecTKetQua(cTKetQua instance);
    partial void DeletecTKetQua(cTKetQua instance);
    partial void InsertdapAn(dapAn instance);
    partial void UpdatedapAn(dapAn instance);
    partial void DeletedapAn(dapAn instance);
    partial void InsertdongGop(dongGop instance);
    partial void UpdatedongGop(dongGop instance);
    partial void DeletedongGop(dongGop instance);
    partial void InsertketQua(ketQua instance);
    partial void UpdateketQua(ketQua instance);
    partial void DeleteketQua(ketQua instance);
    partial void InsertkhoiLop(khoiLop instance);
    partial void UpdatekhoiLop(khoiLop instance);
    partial void DeletekhoiLop(khoiLop instance);
    partial void InsertkyThiThu(kyThiThu instance);
    partial void UpdatekyThiThu(kyThiThu instance);
    partial void DeletekyThiThu(kyThiThu instance);
    partial void InsertlichThi(lichThi instance);
    partial void UpdatelichThi(lichThi instance);
    partial void DeletelichThi(lichThi instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertluyenTap(luyenTap instance);
    partial void UpdateluyenTap(luyenTap instance);
    partial void DeleteluyenTap(luyenTap instance);
    partial void InsertmonHoc(monHoc instance);
    partial void UpdatemonHoc(monHoc instance);
    partial void DeletemonHoc(monHoc instance);
    partial void InsertnguoiDung(nguoiDung instance);
    partial void UpdatenguoiDung(nguoiDung instance);
    partial void DeletenguoiDung(nguoiDung instance);
    #endregion
		
		public QuizDataContext() : 
				base(global::quiz_management.Properties.Settings.Default.QuizDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuizDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuizDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<boDe> boDes
		{
			get
			{
				return this.GetTable<boDe>();
			}
		}
		
		public System.Data.Linq.Table<thongTin> thongTins
		{
			get
			{
				return this.GetTable<thongTin>();
			}
		}
		
		public System.Data.Linq.Table<cauHoi> cauHois
		{
			get
			{
				return this.GetTable<cauHoi>();
			}
		}
		
		public System.Data.Linq.Table<cTBoDe> cTBoDes
		{
			get
			{
				return this.GetTable<cTBoDe>();
			}
		}
		
		public System.Data.Linq.Table<cTDongGop> cTDongGops
		{
			get
			{
				return this.GetTable<cTDongGop>();
			}
		}
		
		public System.Data.Linq.Table<cTKetQua> cTKetQuas
		{
			get
			{
				return this.GetTable<cTKetQua>();
			}
		}
		
		public System.Data.Linq.Table<dapAn> dapAns
		{
			get
			{
				return this.GetTable<dapAn>();
			}
		}
		
		public System.Data.Linq.Table<dongGop> dongGops
		{
			get
			{
				return this.GetTable<dongGop>();
			}
		}
		
		public System.Data.Linq.Table<ketQua> ketQuas
		{
			get
			{
				return this.GetTable<ketQua>();
			}
		}
		
		public System.Data.Linq.Table<khoiLop> khoiLops
		{
			get
			{
				return this.GetTable<khoiLop>();
			}
		}
		
		public System.Data.Linq.Table<kyThiThu> kyThiThus
		{
			get
			{
				return this.GetTable<kyThiThu>();
			}
		}
		
		public System.Data.Linq.Table<lichThi> lichThis
		{
			get
			{
				return this.GetTable<lichThi>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<luyenTap> luyenTaps
		{
			get
			{
				return this.GetTable<luyenTap>();
			}
		}
		
		public System.Data.Linq.Table<monHoc> monHocs
		{
			get
			{
				return this.GetTable<monHoc>();
			}
		}
		
		public System.Data.Linq.Table<nguoiDung> nguoiDungs
		{
			get
			{
				return this.GetTable<nguoiDung>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.boDe")]
	public partial class boDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maBoDe;
		
		private System.Nullable<int> _tongSoCau;
		
		private System.Nullable<int> _maMon;
		
		private string _maKhoi;
		
		private System.Nullable<int> _thoiGian;
		
		private System.Nullable<int> _trangThai;
		
		private EntitySet<cTBoDe> _cTBoDes;
		
		private EntitySet<ketQua> _ketQuas;
		
		private EntitySet<kyThiThu> _kyThiThus;
		
		private EntitySet<lichThi> _lichThis;
		
		private EntityRef<khoiLop> _khoiLop;
		
		private EntityRef<monHoc> _monHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaBoDeChanging(int value);
    partial void OnmaBoDeChanged();
    partial void OntongSoCauChanging(System.Nullable<int> value);
    partial void OntongSoCauChanged();
    partial void OnmaMonChanging(System.Nullable<int> value);
    partial void OnmaMonChanged();
    partial void OnmaKhoiChanging(string value);
    partial void OnmaKhoiChanged();
    partial void OnthoiGianChanging(System.Nullable<int> value);
    partial void OnthoiGianChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    #endregion
		
		public boDe()
		{
			this._cTBoDes = new EntitySet<cTBoDe>(new Action<cTBoDe>(this.attach_cTBoDes), new Action<cTBoDe>(this.detach_cTBoDes));
			this._ketQuas = new EntitySet<ketQua>(new Action<ketQua>(this.attach_ketQuas), new Action<ketQua>(this.detach_ketQuas));
			this._kyThiThus = new EntitySet<kyThiThu>(new Action<kyThiThu>(this.attach_kyThiThus), new Action<kyThiThu>(this.detach_kyThiThus));
			this._lichThis = new EntitySet<lichThi>(new Action<lichThi>(this.attach_lichThis), new Action<lichThi>(this.detach_lichThis));
			this._khoiLop = default(EntityRef<khoiLop>);
			this._monHoc = default(EntityRef<monHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBoDe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maBoDe
		{
			get
			{
				return this._maBoDe;
			}
			set
			{
				if ((this._maBoDe != value))
				{
					this.OnmaBoDeChanging(value);
					this.SendPropertyChanging();
					this._maBoDe = value;
					this.SendPropertyChanged("maBoDe");
					this.OnmaBoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongSoCau", DbType="Int")]
		public System.Nullable<int> tongSoCau
		{
			get
			{
				return this._tongSoCau;
			}
			set
			{
				if ((this._tongSoCau != value))
				{
					this.OntongSoCauChanging(value);
					this.SendPropertyChanging();
					this._tongSoCau = value;
					this.SendPropertyChanged("tongSoCau");
					this.OntongSoCauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMon", DbType="Int")]
		public System.Nullable<int> maMon
		{
			get
			{
				return this._maMon;
			}
			set
			{
				if ((this._maMon != value))
				{
					if (this._monHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonChanging(value);
					this.SendPropertyChanging();
					this._maMon = value;
					this.SendPropertyChanged("maMon");
					this.OnmaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoi", DbType="VarChar(5)")]
		public string maKhoi
		{
			get
			{
				return this._maKhoi;
			}
			set
			{
				if ((this._maKhoi != value))
				{
					if (this._khoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoiChanging(value);
					this.SendPropertyChanging();
					this._maKhoi = value;
					this.SendPropertyChanged("maKhoi");
					this.OnmaKhoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGian", DbType="Int")]
		public System.Nullable<int> thoiGian
		{
			get
			{
				return this._thoiGian;
			}
			set
			{
				if ((this._thoiGian != value))
				{
					this.OnthoiGianChanging(value);
					this.SendPropertyChanging();
					this._thoiGian = value;
					this.SendPropertyChanged("thoiGian");
					this.OnthoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_cTBoDe", Storage="_cTBoDes", ThisKey="maBoDe", OtherKey="maBoDe")]
		public EntitySet<cTBoDe> cTBoDes
		{
			get
			{
				return this._cTBoDes;
			}
			set
			{
				this._cTBoDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_ketQua", Storage="_ketQuas", ThisKey="maBoDe", OtherKey="maBoDe")]
		public EntitySet<ketQua> ketQuas
		{
			get
			{
				return this._ketQuas;
			}
			set
			{
				this._ketQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_kyThiThu", Storage="_kyThiThus", ThisKey="maBoDe", OtherKey="maBoDe")]
		public EntitySet<kyThiThu> kyThiThus
		{
			get
			{
				return this._kyThiThus;
			}
			set
			{
				this._kyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_lichThi", Storage="_lichThis", ThisKey="maBoDe", OtherKey="maBoDe")]
		public EntitySet<lichThi> lichThis
		{
			get
			{
				return this._lichThis;
			}
			set
			{
				this._lichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_boDe", Storage="_khoiLop", ThisKey="maKhoi", OtherKey="maKhoiLop", IsForeignKey=true)]
		public khoiLop khoiLop
		{
			get
			{
				return this._khoiLop.Entity;
			}
			set
			{
				khoiLop previousValue = this._khoiLop.Entity;
				if (((previousValue != value) 
							|| (this._khoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khoiLop.Entity = null;
						previousValue.boDes.Remove(this);
					}
					this._khoiLop.Entity = value;
					if ((value != null))
					{
						value.boDes.Add(this);
						this._maKhoi = value.maKhoiLop;
					}
					else
					{
						this._maKhoi = default(string);
					}
					this.SendPropertyChanged("khoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_boDe", Storage="_monHoc", ThisKey="maMon", OtherKey="maMonHoc", IsForeignKey=true)]
		public monHoc monHoc
		{
			get
			{
				return this._monHoc.Entity;
			}
			set
			{
				monHoc previousValue = this._monHoc.Entity;
				if (((previousValue != value) 
							|| (this._monHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._monHoc.Entity = null;
						previousValue.boDes.Remove(this);
					}
					this._monHoc.Entity = value;
					if ((value != null))
					{
						value.boDes.Add(this);
						this._maMon = value.maMonHoc;
					}
					else
					{
						this._maMon = default(Nullable<int>);
					}
					this.SendPropertyChanged("monHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cTBoDes(cTBoDe entity)
		{
			this.SendPropertyChanging();
			entity.boDe = this;
		}
		
		private void detach_cTBoDes(cTBoDe entity)
		{
			this.SendPropertyChanging();
			entity.boDe = null;
		}
		
		private void attach_ketQuas(ketQua entity)
		{
			this.SendPropertyChanging();
			entity.boDe = this;
		}
		
		private void detach_ketQuas(ketQua entity)
		{
			this.SendPropertyChanging();
			entity.boDe = null;
		}
		
		private void attach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.boDe = this;
		}
		
		private void detach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.boDe = null;
		}
		
		private void attach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.boDe = this;
		}
		
		private void detach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.boDe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.thongTin")]
	public partial class thongTin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNguoidung;
		
		private string _tenNguoiDung;
		
		private System.Nullable<System.DateTime> _ngaySinh;
		
		private System.Nullable<int> _maLopHoc;
		
		private EntityRef<Lop> _Lop;
		
		private EntityRef<nguoiDung> _nguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNguoidungChanging(int value);
    partial void OnmaNguoidungChanged();
    partial void OntenNguoiDungChanging(string value);
    partial void OntenNguoiDungChanged();
    partial void OnngaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaySinhChanged();
    partial void OnmaLopHocChanging(System.Nullable<int> value);
    partial void OnmaLopHocChanged();
    #endregion
		
		public thongTin()
		{
			this._Lop = default(EntityRef<Lop>);
			this._nguoiDung = default(EntityRef<nguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoidung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNguoidung
		{
			get
			{
				return this._maNguoidung;
			}
			set
			{
				if ((this._maNguoidung != value))
				{
					if (this._nguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNguoidungChanging(value);
					this.SendPropertyChanging();
					this._maNguoidung = value;
					this.SendPropertyChanged("maNguoidung");
					this.OnmaNguoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNguoiDung", DbType="NVarChar(50)")]
		public string tenNguoiDung
		{
			get
			{
				return this._tenNguoiDung;
			}
			set
			{
				if ((this._tenNguoiDung != value))
				{
					this.OntenNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._tenNguoiDung = value;
					this.SendPropertyChanged("tenNguoiDung");
					this.OntenNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLopHoc", DbType="Int")]
		public System.Nullable<int> maLopHoc
		{
			get
			{
				return this._maLopHoc;
			}
			set
			{
				if ((this._maLopHoc != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLopHocChanging(value);
					this.SendPropertyChanging();
					this._maLopHoc = value;
					this.SendPropertyChanged("maLopHoc");
					this.OnmaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_thongTin", Storage="_Lop", ThisKey="maLopHoc", OtherKey="maLopHoc", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.thongTins.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.thongTins.Add(this);
						this._maLopHoc = value.maLopHoc;
					}
					else
					{
						this._maLopHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_thongTin", Storage="_nguoiDung", ThisKey="maNguoidung", OtherKey="maNguoiDung", IsForeignKey=true)]
		public nguoiDung nguoiDung
		{
			get
			{
				return this._nguoiDung.Entity;
			}
			set
			{
				nguoiDung previousValue = this._nguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._nguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoiDung.Entity = null;
						previousValue.thongTin = null;
					}
					this._nguoiDung.Entity = value;
					if ((value != null))
					{
						value.thongTin = this;
						this._maNguoidung = value.maNguoiDung;
					}
					else
					{
						this._maNguoidung = default(int);
					}
					this.SendPropertyChanged("nguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cauHoi")]
	public partial class cauHoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCauHoi;
		
		private System.Nullable<int> _maMonHoc;
		
		private string _cauHoi1;
		
		private System.Nullable<int> _doKho;
		
		private System.Nullable<int> _trangThai;
		
		private string _maKhoiLop;
		
		private EntitySet<cTBoDe> _cTBoDes;
		
		private EntitySet<cTKetQua> _cTKetQuas;
		
		private EntitySet<dapAn> _dapAns;
		
		private EntityRef<khoiLop> _khoiLop;
		
		private EntityRef<monHoc> _monHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCauHoiChanging(int value);
    partial void OnmaCauHoiChanged();
    partial void OnmaMonHocChanging(System.Nullable<int> value);
    partial void OnmaMonHocChanged();
    partial void OncauHoi1Changing(string value);
    partial void OncauHoi1Changed();
    partial void OndoKhoChanging(System.Nullable<int> value);
    partial void OndoKhoChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    partial void OnmaKhoiLopChanging(string value);
    partial void OnmaKhoiLopChanged();
    #endregion
		
		public cauHoi()
		{
			this._cTBoDes = new EntitySet<cTBoDe>(new Action<cTBoDe>(this.attach_cTBoDes), new Action<cTBoDe>(this.detach_cTBoDes));
			this._cTKetQuas = new EntitySet<cTKetQua>(new Action<cTKetQua>(this.attach_cTKetQuas), new Action<cTKetQua>(this.detach_cTKetQuas));
			this._dapAns = new EntitySet<dapAn>(new Action<dapAn>(this.attach_dapAns), new Action<dapAn>(this.detach_dapAns));
			this._khoiLop = default(EntityRef<khoiLop>);
			this._monHoc = default(EntityRef<monHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauHoi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maCauHoi
		{
			get
			{
				return this._maCauHoi;
			}
			set
			{
				if ((this._maCauHoi != value))
				{
					this.OnmaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._maCauHoi = value;
					this.SendPropertyChanged("maCauHoi");
					this.OnmaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="Int")]
		public System.Nullable<int> maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					if (this._monHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="cauHoi", Storage="_cauHoi1", DbType="NVarChar(500)")]
		public string cauHoi1
		{
			get
			{
				return this._cauHoi1;
			}
			set
			{
				if ((this._cauHoi1 != value))
				{
					this.OncauHoi1Changing(value);
					this.SendPropertyChanging();
					this._cauHoi1 = value;
					this.SendPropertyChanged("cauHoi1");
					this.OncauHoi1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doKho", DbType="Int")]
		public System.Nullable<int> doKho
		{
			get
			{
				return this._doKho;
			}
			set
			{
				if ((this._doKho != value))
				{
					this.OndoKhoChanging(value);
					this.SendPropertyChanging();
					this._doKho = value;
					this.SendPropertyChanged("doKho");
					this.OndoKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoiLop", DbType="VarChar(5)")]
		public string maKhoiLop
		{
			get
			{
				return this._maKhoiLop;
			}
			set
			{
				if ((this._maKhoiLop != value))
				{
					if (this._khoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._maKhoiLop = value;
					this.SendPropertyChanged("maKhoiLop");
					this.OnmaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_cTBoDe", Storage="_cTBoDes", ThisKey="maCauHoi", OtherKey="maCauHoi")]
		public EntitySet<cTBoDe> cTBoDes
		{
			get
			{
				return this._cTBoDes;
			}
			set
			{
				this._cTBoDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_cTKetQua", Storage="_cTKetQuas", ThisKey="maCauHoi", OtherKey="maCauHoi")]
		public EntitySet<cTKetQua> cTKetQuas
		{
			get
			{
				return this._cTKetQuas;
			}
			set
			{
				this._cTKetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_dapAn", Storage="_dapAns", ThisKey="maCauHoi", OtherKey="maCauHoi")]
		public EntitySet<dapAn> dapAns
		{
			get
			{
				return this._dapAns;
			}
			set
			{
				this._dapAns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_cauHoi", Storage="_khoiLop", ThisKey="maKhoiLop", OtherKey="maKhoiLop", IsForeignKey=true)]
		public khoiLop khoiLop
		{
			get
			{
				return this._khoiLop.Entity;
			}
			set
			{
				khoiLop previousValue = this._khoiLop.Entity;
				if (((previousValue != value) 
							|| (this._khoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khoiLop.Entity = null;
						previousValue.cauHois.Remove(this);
					}
					this._khoiLop.Entity = value;
					if ((value != null))
					{
						value.cauHois.Add(this);
						this._maKhoiLop = value.maKhoiLop;
					}
					else
					{
						this._maKhoiLop = default(string);
					}
					this.SendPropertyChanged("khoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_cauHoi", Storage="_monHoc", ThisKey="maMonHoc", OtherKey="maMonHoc", IsForeignKey=true)]
		public monHoc monHoc
		{
			get
			{
				return this._monHoc.Entity;
			}
			set
			{
				monHoc previousValue = this._monHoc.Entity;
				if (((previousValue != value) 
							|| (this._monHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._monHoc.Entity = null;
						previousValue.cauHois.Remove(this);
					}
					this._monHoc.Entity = value;
					if ((value != null))
					{
						value.cauHois.Add(this);
						this._maMonHoc = value.maMonHoc;
					}
					else
					{
						this._maMonHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("monHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cTBoDes(cTBoDe entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = this;
		}
		
		private void detach_cTBoDes(cTBoDe entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = null;
		}
		
		private void attach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = this;
		}
		
		private void detach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = null;
		}
		
		private void attach_dapAns(dapAn entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = this;
		}
		
		private void detach_dapAns(dapAn entity)
		{
			this.SendPropertyChanging();
			entity.cauHoi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cTBoDe")]
	public partial class cTBoDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maBoDe;
		
		private int _maCauHoi;
		
		private EntityRef<boDe> _boDe;
		
		private EntityRef<cauHoi> _cauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaBoDeChanging(int value);
    partial void OnmaBoDeChanged();
    partial void OnmaCauHoiChanging(int value);
    partial void OnmaCauHoiChanged();
    #endregion
		
		public cTBoDe()
		{
			this._boDe = default(EntityRef<boDe>);
			this._cauHoi = default(EntityRef<cauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBoDe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maBoDe
		{
			get
			{
				return this._maBoDe;
			}
			set
			{
				if ((this._maBoDe != value))
				{
					if (this._boDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaBoDeChanging(value);
					this.SendPropertyChanging();
					this._maBoDe = value;
					this.SendPropertyChanged("maBoDe");
					this.OnmaBoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCauHoi
		{
			get
			{
				return this._maCauHoi;
			}
			set
			{
				if ((this._maCauHoi != value))
				{
					if (this._cauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._maCauHoi = value;
					this.SendPropertyChanged("maCauHoi");
					this.OnmaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_cTBoDe", Storage="_boDe", ThisKey="maBoDe", OtherKey="maBoDe", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public boDe boDe
		{
			get
			{
				return this._boDe.Entity;
			}
			set
			{
				boDe previousValue = this._boDe.Entity;
				if (((previousValue != value) 
							|| (this._boDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._boDe.Entity = null;
						previousValue.cTBoDes.Remove(this);
					}
					this._boDe.Entity = value;
					if ((value != null))
					{
						value.cTBoDes.Add(this);
						this._maBoDe = value.maBoDe;
					}
					else
					{
						this._maBoDe = default(int);
					}
					this.SendPropertyChanged("boDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_cTBoDe", Storage="_cauHoi", ThisKey="maCauHoi", OtherKey="maCauHoi", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cauHoi cauHoi
		{
			get
			{
				return this._cauHoi.Entity;
			}
			set
			{
				cauHoi previousValue = this._cauHoi.Entity;
				if (((previousValue != value) 
							|| (this._cauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cauHoi.Entity = null;
						previousValue.cTBoDes.Remove(this);
					}
					this._cauHoi.Entity = value;
					if ((value != null))
					{
						value.cTBoDes.Add(this);
						this._maCauHoi = value.maCauHoi;
					}
					else
					{
						this._maCauHoi = default(int);
					}
					this.SendPropertyChanged("cauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cTDongGop")]
	public partial class cTDongGop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDongGop;
		
		private string _cauTraLoi;
		
		private System.Nullable<int> _dapAn;
		
		private EntityRef<dongGop> _dongGop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDongGopChanging(int value);
    partial void OnmaDongGopChanged();
    partial void OncauTraLoiChanging(string value);
    partial void OncauTraLoiChanged();
    partial void OndapAnChanging(System.Nullable<int> value);
    partial void OndapAnChanged();
    #endregion
		
		public cTDongGop()
		{
			this._dongGop = default(EntityRef<dongGop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDongGop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maDongGop
		{
			get
			{
				return this._maDongGop;
			}
			set
			{
				if ((this._maDongGop != value))
				{
					if (this._dongGop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDongGopChanging(value);
					this.SendPropertyChanging();
					this._maDongGop = value;
					this.SendPropertyChanged("maDongGop");
					this.OnmaDongGopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauTraLoi", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cauTraLoi
		{
			get
			{
				return this._cauTraLoi;
			}
			set
			{
				if ((this._cauTraLoi != value))
				{
					this.OncauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._cauTraLoi = value;
					this.SendPropertyChanged("cauTraLoi");
					this.OncauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dapAn", DbType="Int")]
		public System.Nullable<int> dapAn
		{
			get
			{
				return this._dapAn;
			}
			set
			{
				if ((this._dapAn != value))
				{
					this.OndapAnChanging(value);
					this.SendPropertyChanging();
					this._dapAn = value;
					this.SendPropertyChanged("dapAn");
					this.OndapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dongGop_cTDongGop", Storage="_dongGop", ThisKey="maDongGop", OtherKey="maDongGop", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public dongGop dongGop
		{
			get
			{
				return this._dongGop.Entity;
			}
			set
			{
				dongGop previousValue = this._dongGop.Entity;
				if (((previousValue != value) 
							|| (this._dongGop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dongGop.Entity = null;
						previousValue.cTDongGops.Remove(this);
					}
					this._dongGop.Entity = value;
					if ((value != null))
					{
						value.cTDongGops.Add(this);
						this._maDongGop = value.maDongGop;
					}
					else
					{
						this._maDongGop = default(int);
					}
					this.SendPropertyChanged("dongGop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cTKetQua")]
	public partial class cTKetQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKetQua;
		
		private int _maCauHoi;
		
		private int _maCauTraLoi;
		
		private System.Nullable<int> _thoiGian;
		
		private EntityRef<cauHoi> _cauHoi;
		
		private EntityRef<dapAn> _dapAn;
		
		private EntityRef<ketQua> _ketQua;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKetQuaChanging(int value);
    partial void OnmaKetQuaChanged();
    partial void OnmaCauHoiChanging(int value);
    partial void OnmaCauHoiChanged();
    partial void OnmaCauTraLoiChanging(int value);
    partial void OnmaCauTraLoiChanged();
    partial void OnthoiGianChanging(System.Nullable<int> value);
    partial void OnthoiGianChanged();
    #endregion
		
		public cTKetQua()
		{
			this._cauHoi = default(EntityRef<cauHoi>);
			this._dapAn = default(EntityRef<dapAn>);
			this._ketQua = default(EntityRef<ketQua>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKetQua", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maKetQua
		{
			get
			{
				return this._maKetQua;
			}
			set
			{
				if ((this._maKetQua != value))
				{
					if (this._ketQua.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKetQuaChanging(value);
					this.SendPropertyChanging();
					this._maKetQua = value;
					this.SendPropertyChanged("maKetQua");
					this.OnmaKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCauHoi
		{
			get
			{
				return this._maCauHoi;
			}
			set
			{
				if ((this._maCauHoi != value))
				{
					if ((this._cauHoi.HasLoadedOrAssignedValue || this._dapAn.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._maCauHoi = value;
					this.SendPropertyChanged("maCauHoi");
					this.OnmaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauTraLoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCauTraLoi
		{
			get
			{
				return this._maCauTraLoi;
			}
			set
			{
				if ((this._maCauTraLoi != value))
				{
					if (this._dapAn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaCauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._maCauTraLoi = value;
					this.SendPropertyChanged("maCauTraLoi");
					this.OnmaCauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGian", DbType="Int")]
		public System.Nullable<int> thoiGian
		{
			get
			{
				return this._thoiGian;
			}
			set
			{
				if ((this._thoiGian != value))
				{
					this.OnthoiGianChanging(value);
					this.SendPropertyChanging();
					this._thoiGian = value;
					this.SendPropertyChanged("thoiGian");
					this.OnthoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_cTKetQua", Storage="_cauHoi", ThisKey="maCauHoi", OtherKey="maCauHoi", IsForeignKey=true)]
		public cauHoi cauHoi
		{
			get
			{
				return this._cauHoi.Entity;
			}
			set
			{
				cauHoi previousValue = this._cauHoi.Entity;
				if (((previousValue != value) 
							|| (this._cauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cauHoi.Entity = null;
						previousValue.cTKetQuas.Remove(this);
					}
					this._cauHoi.Entity = value;
					if ((value != null))
					{
						value.cTKetQuas.Add(this);
						this._maCauHoi = value.maCauHoi;
					}
					else
					{
						this._maCauHoi = default(int);
					}
					this.SendPropertyChanged("cauHoi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dapAn_cTKetQua", Storage="_dapAn", ThisKey="maCauHoi,maCauTraLoi", OtherKey="maCauHoi,maCauTraloi", IsForeignKey=true)]
		public dapAn dapAn
		{
			get
			{
				return this._dapAn.Entity;
			}
			set
			{
				dapAn previousValue = this._dapAn.Entity;
				if (((previousValue != value) 
							|| (this._dapAn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._dapAn.Entity = null;
						previousValue.cTKetQuas.Remove(this);
					}
					this._dapAn.Entity = value;
					if ((value != null))
					{
						value.cTKetQuas.Add(this);
						this._maCauHoi = value.maCauHoi;
						this._maCauTraLoi = value.maCauTraloi;
					}
					else
					{
						this._maCauHoi = default(int);
						this._maCauTraLoi = default(int);
					}
					this.SendPropertyChanged("dapAn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ketQua_cTKetQua", Storage="_ketQua", ThisKey="maKetQua", OtherKey="maKetQua", IsForeignKey=true)]
		public ketQua ketQua
		{
			get
			{
				return this._ketQua.Entity;
			}
			set
			{
				ketQua previousValue = this._ketQua.Entity;
				if (((previousValue != value) 
							|| (this._ketQua.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ketQua.Entity = null;
						previousValue.cTKetQuas.Remove(this);
					}
					this._ketQua.Entity = value;
					if ((value != null))
					{
						value.cTKetQuas.Add(this);
						this._maKetQua = value.maKetQua;
					}
					else
					{
						this._maKetQua = default(int);
					}
					this.SendPropertyChanged("ketQua");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dapAn")]
	public partial class dapAn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maCauHoi;
		
		private int _maCauTraloi;
		
		private string _cauTraLoi;
		
		private System.Nullable<int> _dapAn1;
		
		private EntitySet<cTKetQua> _cTKetQuas;
		
		private EntityRef<cauHoi> _cauHoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaCauHoiChanging(int value);
    partial void OnmaCauHoiChanged();
    partial void OnmaCauTraloiChanging(int value);
    partial void OnmaCauTraloiChanged();
    partial void OncauTraLoiChanging(string value);
    partial void OncauTraLoiChanged();
    partial void OndapAn1Changing(System.Nullable<int> value);
    partial void OndapAn1Changed();
    #endregion
		
		public dapAn()
		{
			this._cTKetQuas = new EntitySet<cTKetQua>(new Action<cTKetQua>(this.attach_cTKetQuas), new Action<cTKetQua>(this.detach_cTKetQuas));
			this._cauHoi = default(EntityRef<cauHoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauHoi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCauHoi
		{
			get
			{
				return this._maCauHoi;
			}
			set
			{
				if ((this._maCauHoi != value))
				{
					if (this._cauHoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._maCauHoi = value;
					this.SendPropertyChanged("maCauHoi");
					this.OnmaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maCauTraloi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maCauTraloi
		{
			get
			{
				return this._maCauTraloi;
			}
			set
			{
				if ((this._maCauTraloi != value))
				{
					this.OnmaCauTraloiChanging(value);
					this.SendPropertyChanging();
					this._maCauTraloi = value;
					this.SendPropertyChanged("maCauTraloi");
					this.OnmaCauTraloiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauTraLoi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string cauTraLoi
		{
			get
			{
				return this._cauTraLoi;
			}
			set
			{
				if ((this._cauTraLoi != value))
				{
					this.OncauTraLoiChanging(value);
					this.SendPropertyChanging();
					this._cauTraLoi = value;
					this.SendPropertyChanged("cauTraLoi");
					this.OncauTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="dapAn", Storage="_dapAn1", DbType="Int")]
		public System.Nullable<int> dapAn1
		{
			get
			{
				return this._dapAn1;
			}
			set
			{
				if ((this._dapAn1 != value))
				{
					this.OndapAn1Changing(value);
					this.SendPropertyChanging();
					this._dapAn1 = value;
					this.SendPropertyChanged("dapAn1");
					this.OndapAn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dapAn_cTKetQua", Storage="_cTKetQuas", ThisKey="maCauHoi,maCauTraloi", OtherKey="maCauHoi,maCauTraLoi")]
		public EntitySet<cTKetQua> cTKetQuas
		{
			get
			{
				return this._cTKetQuas;
			}
			set
			{
				this._cTKetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cauHoi_dapAn", Storage="_cauHoi", ThisKey="maCauHoi", OtherKey="maCauHoi", IsForeignKey=true)]
		public cauHoi cauHoi
		{
			get
			{
				return this._cauHoi.Entity;
			}
			set
			{
				cauHoi previousValue = this._cauHoi.Entity;
				if (((previousValue != value) 
							|| (this._cauHoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cauHoi.Entity = null;
						previousValue.dapAns.Remove(this);
					}
					this._cauHoi.Entity = value;
					if ((value != null))
					{
						value.dapAns.Add(this);
						this._maCauHoi = value.maCauHoi;
					}
					else
					{
						this._maCauHoi = default(int);
					}
					this.SendPropertyChanged("cauHoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.dapAn = this;
		}
		
		private void detach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.dapAn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dongGop")]
	public partial class dongGop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDongGop;
		
		private System.Nullable<int> _maNguoiDung;
		
		private System.Nullable<int> _maMonHoc;
		
		private System.Nullable<int> _trangthai;
		
		private System.Nullable<System.DateTime> _ngay;
		
		private string _cauHoi;
		
		private string _maKhoiLop;
		
		private EntitySet<cTDongGop> _cTDongGops;
		
		private EntityRef<khoiLop> _khoiLop;
		
		private EntityRef<monHoc> _monHoc;
		
		private EntityRef<nguoiDung> _nguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDongGopChanging(int value);
    partial void OnmaDongGopChanged();
    partial void OnmaNguoiDungChanging(System.Nullable<int> value);
    partial void OnmaNguoiDungChanged();
    partial void OnmaMonHocChanging(System.Nullable<int> value);
    partial void OnmaMonHocChanged();
    partial void OntrangthaiChanging(System.Nullable<int> value);
    partial void OntrangthaiChanged();
    partial void OnngayChanging(System.Nullable<System.DateTime> value);
    partial void OnngayChanged();
    partial void OncauHoiChanging(string value);
    partial void OncauHoiChanged();
    partial void OnmaKhoiLopChanging(string value);
    partial void OnmaKhoiLopChanged();
    #endregion
		
		public dongGop()
		{
			this._cTDongGops = new EntitySet<cTDongGop>(new Action<cTDongGop>(this.attach_cTDongGops), new Action<cTDongGop>(this.detach_cTDongGops));
			this._khoiLop = default(EntityRef<khoiLop>);
			this._monHoc = default(EntityRef<monHoc>);
			this._nguoiDung = default(EntityRef<nguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDongGop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDongGop
		{
			get
			{
				return this._maDongGop;
			}
			set
			{
				if ((this._maDongGop != value))
				{
					this.OnmaDongGopChanging(value);
					this.SendPropertyChanging();
					this._maDongGop = value;
					this.SendPropertyChanged("maDongGop");
					this.OnmaDongGopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", DbType="Int")]
		public System.Nullable<int> maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					if (this._nguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="Int")]
		public System.Nullable<int> maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					if (this._monHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangthai", DbType="Int")]
		public System.Nullable<int> trangthai
		{
			get
			{
				return this._trangthai;
			}
			set
			{
				if ((this._trangthai != value))
				{
					this.OntrangthaiChanging(value);
					this.SendPropertyChanging();
					this._trangthai = value;
					this.SendPropertyChanged("trangthai");
					this.OntrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date")]
		public System.Nullable<System.DateTime> ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauHoi", DbType="NVarChar(100)")]
		public string cauHoi
		{
			get
			{
				return this._cauHoi;
			}
			set
			{
				if ((this._cauHoi != value))
				{
					this.OncauHoiChanging(value);
					this.SendPropertyChanging();
					this._cauHoi = value;
					this.SendPropertyChanged("cauHoi");
					this.OncauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoiLop", DbType="VarChar(5)")]
		public string maKhoiLop
		{
			get
			{
				return this._maKhoiLop;
			}
			set
			{
				if ((this._maKhoiLop != value))
				{
					if (this._khoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._maKhoiLop = value;
					this.SendPropertyChanged("maKhoiLop");
					this.OnmaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="dongGop_cTDongGop", Storage="_cTDongGops", ThisKey="maDongGop", OtherKey="maDongGop")]
		public EntitySet<cTDongGop> cTDongGops
		{
			get
			{
				return this._cTDongGops;
			}
			set
			{
				this._cTDongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_dongGop", Storage="_khoiLop", ThisKey="maKhoiLop", OtherKey="maKhoiLop", IsForeignKey=true)]
		public khoiLop khoiLop
		{
			get
			{
				return this._khoiLop.Entity;
			}
			set
			{
				khoiLop previousValue = this._khoiLop.Entity;
				if (((previousValue != value) 
							|| (this._khoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khoiLop.Entity = null;
						previousValue.dongGops.Remove(this);
					}
					this._khoiLop.Entity = value;
					if ((value != null))
					{
						value.dongGops.Add(this);
						this._maKhoiLop = value.maKhoiLop;
					}
					else
					{
						this._maKhoiLop = default(string);
					}
					this.SendPropertyChanged("khoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_dongGop", Storage="_monHoc", ThisKey="maMonHoc", OtherKey="maMonHoc", IsForeignKey=true)]
		public monHoc monHoc
		{
			get
			{
				return this._monHoc.Entity;
			}
			set
			{
				monHoc previousValue = this._monHoc.Entity;
				if (((previousValue != value) 
							|| (this._monHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._monHoc.Entity = null;
						previousValue.dongGops.Remove(this);
					}
					this._monHoc.Entity = value;
					if ((value != null))
					{
						value.dongGops.Add(this);
						this._maMonHoc = value.maMonHoc;
					}
					else
					{
						this._maMonHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("monHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_dongGop", Storage="_nguoiDung", ThisKey="maNguoiDung", OtherKey="maNguoiDung", IsForeignKey=true, DeleteRule="CASCADE")]
		public nguoiDung nguoiDung
		{
			get
			{
				return this._nguoiDung.Entity;
			}
			set
			{
				nguoiDung previousValue = this._nguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._nguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoiDung.Entity = null;
						previousValue.dongGops.Remove(this);
					}
					this._nguoiDung.Entity = value;
					if ((value != null))
					{
						value.dongGops.Add(this);
						this._maNguoiDung = value.maNguoiDung;
					}
					else
					{
						this._maNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("nguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cTDongGops(cTDongGop entity)
		{
			this.SendPropertyChanging();
			entity.dongGop = this;
		}
		
		private void detach_cTDongGops(cTDongGop entity)
		{
			this.SendPropertyChanging();
			entity.dongGop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ketQua")]
	public partial class ketQua : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKetQua;
		
		private System.Nullable<int> _maNguoiDung;
		
		private System.Nullable<int> _maBoDe;
		
		private System.Nullable<int> _cauDung;
		
		private System.Nullable<int> _cauSai;
		
		private System.Nullable<int> _chuaLam;
		
		private System.Nullable<System.DateTime> _ngayLam;
		
		private System.Nullable<int> _trangThai;
		
		private System.Nullable<int> _thoiGian;
		
		private System.Nullable<double> _diem;
		
		private EntitySet<cTKetQua> _cTKetQuas;
		
		private EntityRef<boDe> _boDe;
		
		private EntityRef<nguoiDung> _nguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKetQuaChanging(int value);
    partial void OnmaKetQuaChanged();
    partial void OnmaNguoiDungChanging(System.Nullable<int> value);
    partial void OnmaNguoiDungChanged();
    partial void OnmaBoDeChanging(System.Nullable<int> value);
    partial void OnmaBoDeChanged();
    partial void OncauDungChanging(System.Nullable<int> value);
    partial void OncauDungChanged();
    partial void OncauSaiChanging(System.Nullable<int> value);
    partial void OncauSaiChanged();
    partial void OnchuaLamChanging(System.Nullable<int> value);
    partial void OnchuaLamChanged();
    partial void OnngayLamChanging(System.Nullable<System.DateTime> value);
    partial void OnngayLamChanged();
    partial void OntrangThaiChanging(System.Nullable<int> value);
    partial void OntrangThaiChanged();
    partial void OnthoiGianChanging(System.Nullable<int> value);
    partial void OnthoiGianChanged();
    partial void OndiemChanging(System.Nullable<double> value);
    partial void OndiemChanged();
    #endregion
		
		public ketQua()
		{
			this._cTKetQuas = new EntitySet<cTKetQua>(new Action<cTKetQua>(this.attach_cTKetQuas), new Action<cTKetQua>(this.detach_cTKetQuas));
			this._boDe = default(EntityRef<boDe>);
			this._nguoiDung = default(EntityRef<nguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKetQua", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maKetQua
		{
			get
			{
				return this._maKetQua;
			}
			set
			{
				if ((this._maKetQua != value))
				{
					this.OnmaKetQuaChanging(value);
					this.SendPropertyChanging();
					this._maKetQua = value;
					this.SendPropertyChanged("maKetQua");
					this.OnmaKetQuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", DbType="Int")]
		public System.Nullable<int> maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					if (this._nguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBoDe", DbType="Int")]
		public System.Nullable<int> maBoDe
		{
			get
			{
				return this._maBoDe;
			}
			set
			{
				if ((this._maBoDe != value))
				{
					if (this._boDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaBoDeChanging(value);
					this.SendPropertyChanging();
					this._maBoDe = value;
					this.SendPropertyChanged("maBoDe");
					this.OnmaBoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauDung", DbType="Int")]
		public System.Nullable<int> cauDung
		{
			get
			{
				return this._cauDung;
			}
			set
			{
				if ((this._cauDung != value))
				{
					this.OncauDungChanging(value);
					this.SendPropertyChanging();
					this._cauDung = value;
					this.SendPropertyChanged("cauDung");
					this.OncauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cauSai", DbType="Int")]
		public System.Nullable<int> cauSai
		{
			get
			{
				return this._cauSai;
			}
			set
			{
				if ((this._cauSai != value))
				{
					this.OncauSaiChanging(value);
					this.SendPropertyChanging();
					this._cauSai = value;
					this.SendPropertyChanged("cauSai");
					this.OncauSaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chuaLam", DbType="Int")]
		public System.Nullable<int> chuaLam
		{
			get
			{
				return this._chuaLam;
			}
			set
			{
				if ((this._chuaLam != value))
				{
					this.OnchuaLamChanging(value);
					this.SendPropertyChanging();
					this._chuaLam = value;
					this.SendPropertyChanged("chuaLam");
					this.OnchuaLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayLam", DbType="Date")]
		public System.Nullable<System.DateTime> ngayLam
		{
			get
			{
				return this._ngayLam;
			}
			set
			{
				if ((this._ngayLam != value))
				{
					this.OnngayLamChanging(value);
					this.SendPropertyChanging();
					this._ngayLam = value;
					this.SendPropertyChanged("ngayLam");
					this.OnngayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trangThai", DbType="Int")]
		public System.Nullable<int> trangThai
		{
			get
			{
				return this._trangThai;
			}
			set
			{
				if ((this._trangThai != value))
				{
					this.OntrangThaiChanging(value);
					this.SendPropertyChanging();
					this._trangThai = value;
					this.SendPropertyChanged("trangThai");
					this.OntrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thoiGian", DbType="Int")]
		public System.Nullable<int> thoiGian
		{
			get
			{
				return this._thoiGian;
			}
			set
			{
				if ((this._thoiGian != value))
				{
					this.OnthoiGianChanging(value);
					this.SendPropertyChanging();
					this._thoiGian = value;
					this.SendPropertyChanged("thoiGian");
					this.OnthoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diem", DbType="Float")]
		public System.Nullable<double> diem
		{
			get
			{
				return this._diem;
			}
			set
			{
				if ((this._diem != value))
				{
					this.OndiemChanging(value);
					this.SendPropertyChanging();
					this._diem = value;
					this.SendPropertyChanged("diem");
					this.OndiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ketQua_cTKetQua", Storage="_cTKetQuas", ThisKey="maKetQua", OtherKey="maKetQua")]
		public EntitySet<cTKetQua> cTKetQuas
		{
			get
			{
				return this._cTKetQuas;
			}
			set
			{
				this._cTKetQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_ketQua", Storage="_boDe", ThisKey="maBoDe", OtherKey="maBoDe", IsForeignKey=true)]
		public boDe boDe
		{
			get
			{
				return this._boDe.Entity;
			}
			set
			{
				boDe previousValue = this._boDe.Entity;
				if (((previousValue != value) 
							|| (this._boDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._boDe.Entity = null;
						previousValue.ketQuas.Remove(this);
					}
					this._boDe.Entity = value;
					if ((value != null))
					{
						value.ketQuas.Add(this);
						this._maBoDe = value.maBoDe;
					}
					else
					{
						this._maBoDe = default(Nullable<int>);
					}
					this.SendPropertyChanged("boDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_ketQua", Storage="_nguoiDung", ThisKey="maNguoiDung", OtherKey="maNguoiDung", IsForeignKey=true)]
		public nguoiDung nguoiDung
		{
			get
			{
				return this._nguoiDung.Entity;
			}
			set
			{
				nguoiDung previousValue = this._nguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._nguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoiDung.Entity = null;
						previousValue.ketQuas.Remove(this);
					}
					this._nguoiDung.Entity = value;
					if ((value != null))
					{
						value.ketQuas.Add(this);
						this._maNguoiDung = value.maNguoiDung;
					}
					else
					{
						this._maNguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("nguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.ketQua = this;
		}
		
		private void detach_cTKetQuas(cTKetQua entity)
		{
			this.SendPropertyChanging();
			entity.ketQua = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.khoiLop")]
	public partial class khoiLop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKhoiLop;
		
		private string _tenKhoiLop;
		
		private EntitySet<boDe> _boDes;
		
		private EntitySet<cauHoi> _cauHois;
		
		private EntitySet<dongGop> _dongGops;
		
		private EntitySet<kyThiThu> _kyThiThus;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhoiLopChanging(string value);
    partial void OnmaKhoiLopChanged();
    partial void OntenKhoiLopChanging(string value);
    partial void OntenKhoiLopChanged();
    #endregion
		
		public khoiLop()
		{
			this._boDes = new EntitySet<boDe>(new Action<boDe>(this.attach_boDes), new Action<boDe>(this.detach_boDes));
			this._cauHois = new EntitySet<cauHoi>(new Action<cauHoi>(this.attach_cauHois), new Action<cauHoi>(this.detach_cauHois));
			this._dongGops = new EntitySet<dongGop>(new Action<dongGop>(this.attach_dongGops), new Action<dongGop>(this.detach_dongGops));
			this._kyThiThus = new EntitySet<kyThiThu>(new Action<kyThiThu>(this.attach_kyThiThus), new Action<kyThiThu>(this.detach_kyThiThus));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoiLop", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maKhoiLop
		{
			get
			{
				return this._maKhoiLop;
			}
			set
			{
				if ((this._maKhoiLop != value))
				{
					this.OnmaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._maKhoiLop = value;
					this.SendPropertyChanged("maKhoiLop");
					this.OnmaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKhoiLop", DbType="VarChar(10)")]
		public string tenKhoiLop
		{
			get
			{
				return this._tenKhoiLop;
			}
			set
			{
				if ((this._tenKhoiLop != value))
				{
					this.OntenKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._tenKhoiLop = value;
					this.SendPropertyChanged("tenKhoiLop");
					this.OntenKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_boDe", Storage="_boDes", ThisKey="maKhoiLop", OtherKey="maKhoi")]
		public EntitySet<boDe> boDes
		{
			get
			{
				return this._boDes;
			}
			set
			{
				this._boDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_cauHoi", Storage="_cauHois", ThisKey="maKhoiLop", OtherKey="maKhoiLop")]
		public EntitySet<cauHoi> cauHois
		{
			get
			{
				return this._cauHois;
			}
			set
			{
				this._cauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_dongGop", Storage="_dongGops", ThisKey="maKhoiLop", OtherKey="maKhoiLop")]
		public EntitySet<dongGop> dongGops
		{
			get
			{
				return this._dongGops;
			}
			set
			{
				this._dongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_kyThiThu", Storage="_kyThiThus", ThisKey="maKhoiLop", OtherKey="maKhoiLop")]
		public EntitySet<kyThiThu> kyThiThus
		{
			get
			{
				return this._kyThiThus;
			}
			set
			{
				this._kyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_Lop", Storage="_Lops", ThisKey="maKhoiLop", OtherKey="maKhoiLop")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_boDes(boDe entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = this;
		}
		
		private void detach_boDes(boDe entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = null;
		}
		
		private void attach_cauHois(cauHoi entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = this;
		}
		
		private void detach_cauHois(cauHoi entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = null;
		}
		
		private void attach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = this;
		}
		
		private void detach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = null;
		}
		
		private void attach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = this;
		}
		
		private void detach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.khoiLop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.kyThiThu")]
	public partial class kyThiThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKyThiThu;
		
		private int _maNguoiDung;
		
		private System.Nullable<int> _maMonHoc;
		
		private System.Nullable<System.DateTime> _ngayThi;
		
		private System.Nullable<System.DateTime> _ngayKT;
		
		private int _maBoDe;
		
		private string _maKhoiLop;
		
		private EntityRef<boDe> _boDe;
		
		private EntityRef<khoiLop> _khoiLop;
		
		private EntityRef<monHoc> _monHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKyThiThuChanging(int value);
    partial void OnmaKyThiThuChanged();
    partial void OnmaNguoiDungChanging(int value);
    partial void OnmaNguoiDungChanged();
    partial void OnmaMonHocChanging(System.Nullable<int> value);
    partial void OnmaMonHocChanged();
    partial void OnngayThiChanging(System.Nullable<System.DateTime> value);
    partial void OnngayThiChanged();
    partial void OnngayKTChanging(System.Nullable<System.DateTime> value);
    partial void OnngayKTChanged();
    partial void OnmaBoDeChanging(int value);
    partial void OnmaBoDeChanged();
    partial void OnmaKhoiLopChanging(string value);
    partial void OnmaKhoiLopChanged();
    #endregion
		
		public kyThiThu()
		{
			this._boDe = default(EntityRef<boDe>);
			this._khoiLop = default(EntityRef<khoiLop>);
			this._monHoc = default(EntityRef<monHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKyThiThu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maKyThiThu
		{
			get
			{
				return this._maKyThiThu;
			}
			set
			{
				if ((this._maKyThiThu != value))
				{
					this.OnmaKyThiThuChanging(value);
					this.SendPropertyChanging();
					this._maKyThiThu = value;
					this.SendPropertyChanged("maKyThiThu");
					this.OnmaKyThiThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="Int")]
		public System.Nullable<int> maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					if (this._monHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayThi", DbType="Date")]
		public System.Nullable<System.DateTime> ngayThi
		{
			get
			{
				return this._ngayThi;
			}
			set
			{
				if ((this._ngayThi != value))
				{
					this.OnngayThiChanging(value);
					this.SendPropertyChanging();
					this._ngayThi = value;
					this.SendPropertyChanged("ngayThi");
					this.OnngayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayKT", DbType="Date")]
		public System.Nullable<System.DateTime> ngayKT
		{
			get
			{
				return this._ngayKT;
			}
			set
			{
				if ((this._ngayKT != value))
				{
					this.OnngayKTChanging(value);
					this.SendPropertyChanging();
					this._ngayKT = value;
					this.SendPropertyChanged("ngayKT");
					this.OnngayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBoDe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maBoDe
		{
			get
			{
				return this._maBoDe;
			}
			set
			{
				if ((this._maBoDe != value))
				{
					if (this._boDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaBoDeChanging(value);
					this.SendPropertyChanging();
					this._maBoDe = value;
					this.SendPropertyChanged("maBoDe");
					this.OnmaBoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoiLop", DbType="VarChar(5)")]
		public string maKhoiLop
		{
			get
			{
				return this._maKhoiLop;
			}
			set
			{
				if ((this._maKhoiLop != value))
				{
					if (this._khoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._maKhoiLop = value;
					this.SendPropertyChanged("maKhoiLop");
					this.OnmaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_kyThiThu", Storage="_boDe", ThisKey="maBoDe", OtherKey="maBoDe", IsForeignKey=true)]
		public boDe boDe
		{
			get
			{
				return this._boDe.Entity;
			}
			set
			{
				boDe previousValue = this._boDe.Entity;
				if (((previousValue != value) 
							|| (this._boDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._boDe.Entity = null;
						previousValue.kyThiThus.Remove(this);
					}
					this._boDe.Entity = value;
					if ((value != null))
					{
						value.kyThiThus.Add(this);
						this._maBoDe = value.maBoDe;
					}
					else
					{
						this._maBoDe = default(int);
					}
					this.SendPropertyChanged("boDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_kyThiThu", Storage="_khoiLop", ThisKey="maKhoiLop", OtherKey="maKhoiLop", IsForeignKey=true)]
		public khoiLop khoiLop
		{
			get
			{
				return this._khoiLop.Entity;
			}
			set
			{
				khoiLop previousValue = this._khoiLop.Entity;
				if (((previousValue != value) 
							|| (this._khoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khoiLop.Entity = null;
						previousValue.kyThiThus.Remove(this);
					}
					this._khoiLop.Entity = value;
					if ((value != null))
					{
						value.kyThiThus.Add(this);
						this._maKhoiLop = value.maKhoiLop;
					}
					else
					{
						this._maKhoiLop = default(string);
					}
					this.SendPropertyChanged("khoiLop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_kyThiThu", Storage="_monHoc", ThisKey="maMonHoc", OtherKey="maMonHoc", IsForeignKey=true)]
		public monHoc monHoc
		{
			get
			{
				return this._monHoc.Entity;
			}
			set
			{
				monHoc previousValue = this._monHoc.Entity;
				if (((previousValue != value) 
							|| (this._monHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._monHoc.Entity = null;
						previousValue.kyThiThus.Remove(this);
					}
					this._monHoc.Entity = value;
					if ((value != null))
					{
						value.kyThiThus.Add(this);
						this._maMonHoc = value.maMonHoc;
					}
					else
					{
						this._maMonHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("monHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lichThi")]
	public partial class lichThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNguoiDung;
		
		private int _maMonHoc;
		
		private System.DateTime _ngayThi;
		
		private int _maBoDe;
		
		private int _maLichThi;
		
		private EntityRef<boDe> _boDe;
		
		private EntityRef<monHoc> _monHoc;
		
		private EntityRef<nguoiDung> _nguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNguoiDungChanging(int value);
    partial void OnmaNguoiDungChanged();
    partial void OnmaMonHocChanging(int value);
    partial void OnmaMonHocChanged();
    partial void OnngayThiChanging(System.DateTime value);
    partial void OnngayThiChanged();
    partial void OnmaBoDeChanging(int value);
    partial void OnmaBoDeChanged();
    partial void OnmaLichThiChanging(int value);
    partial void OnmaLichThiChanged();
    #endregion
		
		public lichThi()
		{
			this._boDe = default(EntityRef<boDe>);
			this._monHoc = default(EntityRef<monHoc>);
			this._nguoiDung = default(EntityRef<nguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					if (this._nguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="Int NOT NULL")]
		public int maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					if (this._monHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayThi", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ngayThi
		{
			get
			{
				return this._ngayThi;
			}
			set
			{
				if ((this._ngayThi != value))
				{
					this.OnngayThiChanging(value);
					this.SendPropertyChanging();
					this._ngayThi = value;
					this.SendPropertyChanged("ngayThi");
					this.OnngayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBoDe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maBoDe
		{
			get
			{
				return this._maBoDe;
			}
			set
			{
				if ((this._maBoDe != value))
				{
					if (this._boDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaBoDeChanging(value);
					this.SendPropertyChanging();
					this._maBoDe = value;
					this.SendPropertyChanged("maBoDe");
					this.OnmaBoDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLichThi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maLichThi
		{
			get
			{
				return this._maLichThi;
			}
			set
			{
				if ((this._maLichThi != value))
				{
					this.OnmaLichThiChanging(value);
					this.SendPropertyChanging();
					this._maLichThi = value;
					this.SendPropertyChanged("maLichThi");
					this.OnmaLichThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="boDe_lichThi", Storage="_boDe", ThisKey="maBoDe", OtherKey="maBoDe", IsForeignKey=true)]
		public boDe boDe
		{
			get
			{
				return this._boDe.Entity;
			}
			set
			{
				boDe previousValue = this._boDe.Entity;
				if (((previousValue != value) 
							|| (this._boDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._boDe.Entity = null;
						previousValue.lichThis.Remove(this);
					}
					this._boDe.Entity = value;
					if ((value != null))
					{
						value.lichThis.Add(this);
						this._maBoDe = value.maBoDe;
					}
					else
					{
						this._maBoDe = default(int);
					}
					this.SendPropertyChanged("boDe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_lichThi", Storage="_monHoc", ThisKey="maMonHoc", OtherKey="maMonHoc", IsForeignKey=true)]
		public monHoc monHoc
		{
			get
			{
				return this._monHoc.Entity;
			}
			set
			{
				monHoc previousValue = this._monHoc.Entity;
				if (((previousValue != value) 
							|| (this._monHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._monHoc.Entity = null;
						previousValue.lichThis.Remove(this);
					}
					this._monHoc.Entity = value;
					if ((value != null))
					{
						value.lichThis.Add(this);
						this._maMonHoc = value.maMonHoc;
					}
					else
					{
						this._maMonHoc = default(int);
					}
					this.SendPropertyChanged("monHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_lichThi", Storage="_nguoiDung", ThisKey="maNguoiDung", OtherKey="maNguoiDung", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public nguoiDung nguoiDung
		{
			get
			{
				return this._nguoiDung.Entity;
			}
			set
			{
				nguoiDung previousValue = this._nguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._nguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoiDung.Entity = null;
						previousValue.lichThis.Remove(this);
					}
					this._nguoiDung.Entity = value;
					if ((value != null))
					{
						value.lichThis.Add(this);
						this._maNguoiDung = value.maNguoiDung;
					}
					else
					{
						this._maNguoiDung = default(int);
					}
					this.SendPropertyChanged("nguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maKhoiLop;
		
		private int _maLopHoc;
		
		private string _tenLopHoc;
		
		private EntitySet<thongTin> _thongTins;
		
		private EntityRef<khoiLop> _khoiLop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhoiLopChanging(string value);
    partial void OnmaKhoiLopChanged();
    partial void OnmaLopHocChanging(int value);
    partial void OnmaLopHocChanged();
    partial void OntenLopHocChanging(string value);
    partial void OntenLopHocChanged();
    #endregion
		
		public Lop()
		{
			this._thongTins = new EntitySet<thongTin>(new Action<thongTin>(this.attach_thongTins), new Action<thongTin>(this.detach_thongTins));
			this._khoiLop = default(EntityRef<khoiLop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoiLop", DbType="VarChar(5)")]
		public string maKhoiLop
		{
			get
			{
				return this._maKhoiLop;
			}
			set
			{
				if ((this._maKhoiLop != value))
				{
					if (this._khoiLop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._maKhoiLop = value;
					this.SendPropertyChanged("maKhoiLop");
					this.OnmaKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLopHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLopHoc
		{
			get
			{
				return this._maLopHoc;
			}
			set
			{
				if ((this._maLopHoc != value))
				{
					this.OnmaLopHocChanging(value);
					this.SendPropertyChanging();
					this._maLopHoc = value;
					this.SendPropertyChanged("maLopHoc");
					this.OnmaLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLopHoc", DbType="NVarChar(10)")]
		public string tenLopHoc
		{
			get
			{
				return this._tenLopHoc;
			}
			set
			{
				if ((this._tenLopHoc != value))
				{
					this.OntenLopHocChanging(value);
					this.SendPropertyChanging();
					this._tenLopHoc = value;
					this.SendPropertyChanged("tenLopHoc");
					this.OntenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_thongTin", Storage="_thongTins", ThisKey="maLopHoc", OtherKey="maLopHoc")]
		public EntitySet<thongTin> thongTins
		{
			get
			{
				return this._thongTins;
			}
			set
			{
				this._thongTins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="khoiLop_Lop", Storage="_khoiLop", ThisKey="maKhoiLop", OtherKey="maKhoiLop", IsForeignKey=true)]
		public khoiLop khoiLop
		{
			get
			{
				return this._khoiLop.Entity;
			}
			set
			{
				khoiLop previousValue = this._khoiLop.Entity;
				if (((previousValue != value) 
							|| (this._khoiLop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._khoiLop.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._khoiLop.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._maKhoiLop = value.maKhoiLop;
					}
					else
					{
						this._maKhoiLop = default(string);
					}
					this.SendPropertyChanged("khoiLop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_thongTins(thongTin entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_thongTins(thongTin entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.luyenTap")]
	public partial class luyenTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNguoiDung;
		
		private int _soCauDung;
		
		private int _soCauSai;
		
		private System.DateTime _ngay;
		
		private EntityRef<nguoiDung> _nguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNguoiDungChanging(int value);
    partial void OnmaNguoiDungChanged();
    partial void OnsoCauDungChanging(int value);
    partial void OnsoCauDungChanged();
    partial void OnsoCauSaiChanging(int value);
    partial void OnsoCauSaiChanged();
    partial void OnngayChanging(System.DateTime value);
    partial void OnngayChanged();
    #endregion
		
		public luyenTap()
		{
			this._nguoiDung = default(EntityRef<nguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					if (this._nguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soCauDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int soCauDung
		{
			get
			{
				return this._soCauDung;
			}
			set
			{
				if ((this._soCauDung != value))
				{
					this.OnsoCauDungChanging(value);
					this.SendPropertyChanging();
					this._soCauDung = value;
					this.SendPropertyChanged("soCauDung");
					this.OnsoCauDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soCauSai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int soCauSai
		{
			get
			{
				return this._soCauSai;
			}
			set
			{
				if ((this._soCauSai != value))
				{
					this.OnsoCauSaiChanging(value);
					this.SendPropertyChanging();
					this._soCauSai = value;
					this.SendPropertyChanged("soCauSai");
					this.OnsoCauSaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngay", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime ngay
		{
			get
			{
				return this._ngay;
			}
			set
			{
				if ((this._ngay != value))
				{
					this.OnngayChanging(value);
					this.SendPropertyChanging();
					this._ngay = value;
					this.SendPropertyChanged("ngay");
					this.OnngayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_luyenTap", Storage="_nguoiDung", ThisKey="maNguoiDung", OtherKey="maNguoiDung", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public nguoiDung nguoiDung
		{
			get
			{
				return this._nguoiDung.Entity;
			}
			set
			{
				nguoiDung previousValue = this._nguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._nguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._nguoiDung.Entity = null;
						previousValue.luyenTaps.Remove(this);
					}
					this._nguoiDung.Entity = value;
					if ((value != null))
					{
						value.luyenTaps.Add(this);
						this._maNguoiDung = value.maNguoiDung;
					}
					else
					{
						this._maNguoiDung = default(int);
					}
					this.SendPropertyChanged("nguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.monHoc")]
	public partial class monHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maMonHoc;
		
		private string _tenMonHoc;
		
		private EntitySet<boDe> _boDes;
		
		private EntitySet<cauHoi> _cauHois;
		
		private EntitySet<dongGop> _dongGops;
		
		private EntitySet<kyThiThu> _kyThiThus;
		
		private EntitySet<lichThi> _lichThis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaMonHocChanging(int value);
    partial void OnmaMonHocChanged();
    partial void OntenMonHocChanging(string value);
    partial void OntenMonHocChanged();
    #endregion
		
		public monHoc()
		{
			this._boDes = new EntitySet<boDe>(new Action<boDe>(this.attach_boDes), new Action<boDe>(this.detach_boDes));
			this._cauHois = new EntitySet<cauHoi>(new Action<cauHoi>(this.attach_cauHois), new Action<cauHoi>(this.detach_cauHois));
			this._dongGops = new EntitySet<dongGop>(new Action<dongGop>(this.attach_dongGops), new Action<dongGop>(this.detach_dongGops));
			this._kyThiThus = new EntitySet<kyThiThu>(new Action<kyThiThu>(this.attach_kyThiThus), new Action<kyThiThu>(this.detach_kyThiThus));
			this._lichThis = new EntitySet<lichThi>(new Action<lichThi>(this.attach_lichThis), new Action<lichThi>(this.detach_lichThis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenMonHoc", DbType="NVarChar(20)")]
		public string tenMonHoc
		{
			get
			{
				return this._tenMonHoc;
			}
			set
			{
				if ((this._tenMonHoc != value))
				{
					this.OntenMonHocChanging(value);
					this.SendPropertyChanging();
					this._tenMonHoc = value;
					this.SendPropertyChanged("tenMonHoc");
					this.OntenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_boDe", Storage="_boDes", ThisKey="maMonHoc", OtherKey="maMon")]
		public EntitySet<boDe> boDes
		{
			get
			{
				return this._boDes;
			}
			set
			{
				this._boDes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_cauHoi", Storage="_cauHois", ThisKey="maMonHoc", OtherKey="maMonHoc")]
		public EntitySet<cauHoi> cauHois
		{
			get
			{
				return this._cauHois;
			}
			set
			{
				this._cauHois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_dongGop", Storage="_dongGops", ThisKey="maMonHoc", OtherKey="maMonHoc")]
		public EntitySet<dongGop> dongGops
		{
			get
			{
				return this._dongGops;
			}
			set
			{
				this._dongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_kyThiThu", Storage="_kyThiThus", ThisKey="maMonHoc", OtherKey="maMonHoc")]
		public EntitySet<kyThiThu> kyThiThus
		{
			get
			{
				return this._kyThiThus;
			}
			set
			{
				this._kyThiThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="monHoc_lichThi", Storage="_lichThis", ThisKey="maMonHoc", OtherKey="maMonHoc")]
		public EntitySet<lichThi> lichThis
		{
			get
			{
				return this._lichThis;
			}
			set
			{
				this._lichThis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_boDes(boDe entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = this;
		}
		
		private void detach_boDes(boDe entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = null;
		}
		
		private void attach_cauHois(cauHoi entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = this;
		}
		
		private void detach_cauHois(cauHoi entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = null;
		}
		
		private void attach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = this;
		}
		
		private void detach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = null;
		}
		
		private void attach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = this;
		}
		
		private void detach_kyThiThus(kyThiThu entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = null;
		}
		
		private void attach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = this;
		}
		
		private void detach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.monHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.nguoiDung")]
	public partial class nguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNguoiDung;
		
		private string _tenTaiKhoan;
		
		private string _matKhau;
		
		private System.Nullable<int> _phanQuyen;
		
		private System.Nullable<int> _TrangThai;
		
		private EntityRef<thongTin> _thongTin;
		
		private EntitySet<dongGop> _dongGops;
		
		private EntitySet<ketQua> _ketQuas;
		
		private EntitySet<lichThi> _lichThis;
		
		private EntitySet<luyenTap> _luyenTaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNguoiDungChanging(int value);
    partial void OnmaNguoiDungChanged();
    partial void OntenTaiKhoanChanging(string value);
    partial void OntenTaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnphanQuyenChanging(System.Nullable<int> value);
    partial void OnphanQuyenChanged();
    partial void OnTrangThaiChanging(System.Nullable<int> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public nguoiDung()
		{
			this._thongTin = default(EntityRef<thongTin>);
			this._dongGops = new EntitySet<dongGop>(new Action<dongGop>(this.attach_dongGops), new Action<dongGop>(this.detach_dongGops));
			this._ketQuas = new EntitySet<ketQua>(new Action<ketQua>(this.attach_ketQuas), new Action<ketQua>(this.detach_ketQuas));
			this._lichThis = new EntitySet<lichThi>(new Action<lichThi>(this.attach_lichThis), new Action<lichThi>(this.detach_lichThis));
			this._luyenTaps = new EntitySet<luyenTap>(new Action<luyenTap>(this.attach_luyenTaps), new Action<luyenTap>(this.detach_luyenTaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maNguoiDung
		{
			get
			{
				return this._maNguoiDung;
			}
			set
			{
				if ((this._maNguoiDung != value))
				{
					this.OnmaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNguoiDung = value;
					this.SendPropertyChanged("maNguoiDung");
					this.OnmaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTaiKhoan", DbType="VarChar(100)")]
		public string tenTaiKhoan
		{
			get
			{
				return this._tenTaiKhoan;
			}
			set
			{
				if ((this._tenTaiKhoan != value))
				{
					this.OntenTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._tenTaiKhoan = value;
					this.SendPropertyChanged("tenTaiKhoan");
					this.OntenTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="VarChar(MAX)")]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phanQuyen", DbType="Int")]
		public System.Nullable<int> phanQuyen
		{
			get
			{
				return this._phanQuyen;
			}
			set
			{
				if ((this._phanQuyen != value))
				{
					this.OnphanQuyenChanging(value);
					this.SendPropertyChanging();
					this._phanQuyen = value;
					this.SendPropertyChanged("phanQuyen");
					this.OnphanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Int")]
		public System.Nullable<int> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_thongTin", Storage="_thongTin", ThisKey="maNguoiDung", OtherKey="maNguoidung", IsUnique=true, IsForeignKey=false)]
		public thongTin thongTin
		{
			get
			{
				return this._thongTin.Entity;
			}
			set
			{
				thongTin previousValue = this._thongTin.Entity;
				if (((previousValue != value) 
							|| (this._thongTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._thongTin.Entity = null;
						previousValue.nguoiDung = null;
					}
					this._thongTin.Entity = value;
					if ((value != null))
					{
						value.nguoiDung = this;
					}
					this.SendPropertyChanged("thongTin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_dongGop", Storage="_dongGops", ThisKey="maNguoiDung", OtherKey="maNguoiDung")]
		public EntitySet<dongGop> dongGops
		{
			get
			{
				return this._dongGops;
			}
			set
			{
				this._dongGops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_ketQua", Storage="_ketQuas", ThisKey="maNguoiDung", OtherKey="maNguoiDung")]
		public EntitySet<ketQua> ketQuas
		{
			get
			{
				return this._ketQuas;
			}
			set
			{
				this._ketQuas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_lichThi", Storage="_lichThis", ThisKey="maNguoiDung", OtherKey="maNguoiDung")]
		public EntitySet<lichThi> lichThis
		{
			get
			{
				return this._lichThis;
			}
			set
			{
				this._lichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="nguoiDung_luyenTap", Storage="_luyenTaps", ThisKey="maNguoiDung", OtherKey="maNguoiDung")]
		public EntitySet<luyenTap> luyenTaps
		{
			get
			{
				return this._luyenTaps;
			}
			set
			{
				this._luyenTaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = this;
		}
		
		private void detach_dongGops(dongGop entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = null;
		}
		
		private void attach_ketQuas(ketQua entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = this;
		}
		
		private void detach_ketQuas(ketQua entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = null;
		}
		
		private void attach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = this;
		}
		
		private void detach_lichThis(lichThi entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = null;
		}
		
		private void attach_luyenTaps(luyenTap entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = this;
		}
		
		private void detach_luyenTaps(luyenTap entity)
		{
			this.SendPropertyChanging();
			entity.nguoiDung = null;
		}
	}
}
#pragma warning restore 1591
